<!DOCTYPE html>
<html>
<head>
    <title>{{chart.heading}}</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js@3.7.1/dist/chart.min.js"></script>
        <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
</head>
<body>
    <div class="section-container" >
        <div style="margin-left:5%;margin-right:5%">
        <canvas id="myLineChart1" style="width:100%;max-width:100%; border-radius: 5px; margin-bottom: 10px; border: 0.5px solid gray; padding: 10px"></canvas>
    </div>
    <div class="section-container">
        <div style="margin-left:5%;margin-right:5%; border-radius: 5px; margin-bottom: 10px; border: 0.5px solid gray; padding: 10px">
            <canvas id="myLineChart" style="width:100%;max-width:100%"></canvas>
        </div>
    </div>
    <body>
    <div style=" border-radius: 5px; margin-bottom: 10px; border: 0.5px solid gray; padding: 10px; margin-left: 5%;
    margin-right: 5%;">
        <div id="table_div" style="max-height: 300px; overflow-y: scroll;"></div>
    </div>
  </body>
    
    <script>
        let labels = "{{chart.xAxisDates}}"
        labels = labels.split(",")
        const chartData = {{{chart.chartData}}}
        const newListingData = {{{chart.newListingChartData}}}
        const  MultiLinechartDataforRevenueByMonth = {
            type: "line",
            data: {
                labels:labels,
                datasets:chartData.map(chart=>
                {return{
                      label: chart.broker,
                        lineTension: 0,
                        backgroundColor: getRandomColor(),
                        data: labels.map(date=>(chart.valueByMonth[date]))
                }})
            },
            options: {
    responsive: true,
    plugins: {
      title: {
        display: true,
        text: 'Average revenue per month'
      }
    },
    scales: {
      x: {
        display: true,
      },
      y: {
        display: true,
        type: 'logarithmic',
      }
    }
  },
        };
        const  MultiLinechartDataforPerListing = {
            type: "line",
            data: {
                labels:labels,
                datasets:newListingData.map(chart=>
                {return{
                        label: chart.broker,
                        lineTension: 0,
                        backgroundColor: getRandomColor(),
                        data: labels.map(date=>(chart.valueByMonth[date]))
                }})
            },
            options: {
                plugins: {
                    title: {
                        display: true,
                        text: 'New listing per month',
                    },
                    decimation: {
         enabled: false,
         algorithm: 'min-max',
      },
                    
                },
                scales: {
                    x: {
                        display: true,
                        title: {
                            display: true,
                            text: 'Months'
                        }
                    },
                    y: {
                        
                        display: true,
                        title: {
                            display: true,
                            text: 'Listings'
                        },
                        
                    }
                }
            }
        };
        
        new Chart("myLineChart", MultiLinechartDataforRevenueByMonth );
        new Chart("myLineChart1", MultiLinechartDataforPerListing );
        function getRandomColor() {
    const constters = '0123456789ABCDEF'.split('');
    let color = '#';
    for (let i = 0; i < 6; i++ ) {
        color += constters[Math.floor(Math.random() * 16)];
    }
    return color;
}
    </script>
<script type="text/javascript">
      google.charts.load('current', {'packages':['table']});
      google.charts.setOnLoadCallback(drawTable);
        const chartTableData = {{{chart.chartTableData}}}
      function drawTable() {
        const data = new google.visualization.DataTable();
        data.addColumn('number', 'id');
        data.addColumn('number', 'month');
        data.addColumn('number', 'year');
        data.addColumn('string', 'date');
        data.addColumn('string', 'broker');
        data.addColumn('number', 'revenue');
        data.addRows(chartTableData.map(d=>{
            return [d.id,d.month,d.year,d.date,d.broker,{v:parseInt(d.revenue),f:'$'+d.revenue}]
        }));
        const table = new google.visualization.Table(document.getElementById('table_div'));
        table.draw(data, {showRowNumber: true, width: '100%', height: '100%'});
      }
    </script>
</body>
</html>